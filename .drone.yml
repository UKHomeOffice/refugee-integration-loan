---
kind: pipeline
name: default
type: kubernetes

environment:
  APP_NAME: refugee-loan
  PROD_ENV: sas-ril-prod
  STG_ENV: sas-ril-stg
  UAT_ENV: sas-ril-uat
  BRANCH_ENV: sas-ril-branch
  PRODUCTION_URL: www.apply-for-refugee-integration-loan.homeoffice.gov.uk
  IMAGE_URL: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
  IMAGE_REPO: sas/refugee-integration-loans
  GIT_REPO: UKHomeOffice/refugee-integration-loan
  HOF_CONFIG: hof-services-config/Refugee_Integration_Loan
  NON_PROD_AVAILABILITY: Mon-Fri 00:01-23:59 Europe/London
  READY_FOR_TEST_DELAY: 20s

include_default_branch: &include_default_branch
  include:
    - master

include_default_and_feature_branches: &include_default_and_feature_branches
  include:
    - master
    - feature/*
  
trigger:
  branch:
    <<: *include_default_and_feature_branches

node_image: &node_image
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/hof-nodejs:20.19.0-alpine3.21@sha256:aad584fa26cb2838739527166c8965d95d0d2d9b88cfd5e3e2d3b8647ae03101

linting: &linting
  <<: *node_image
  environment:
    NOTIFY_STUB: true
  commands:
    - yarn run test:lint

unit_tests: &unit_tests
  <<: *node_image
  environment:
    NOTIFY_STUB: true
  commands:
    - yarn run test:unit

sonar_scanner: &sonar_scanner
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/sonar-scanner-nodejs:latest
  commands:
    - sonar-scanner -Dproject.settings=./sonar-project.properties

ui_integration_tests: &ui_integration_tests
  <<: *node_image
  environment:
    NOTIFY_STUB: true
  commands:
    - yarn run test:ui-integration

accessibility_tests: &accessibility_tests
  # <<: *node_image
  image: node:20
  options: --user root
  environment:
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
    # PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome-stable
    NOTIFY_STUB: true
    ENVIRONMENT: DRONE
    DRONE_DEBUG: true
    DRONE_TRACE: true
    DRONE_LOGS_TEXT: true
    DRONE_LOGS_PRETTY: true
    DRONE_LOGS_COLOR: true
    DRONE_SERVER:
      from_secret: drone_server
    DRONE_TOKEN:
      from_secret: drone_token
  volumes:
    - name: dockersock
      path: /root/.dockersock
  commands:
    - apt-get update
    - apt-get install curl gnupg -y
    - curl --location --silent https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y gnutls-bin binutils nodejs npm libjpeg62-turbo libcurl4 libx11-6 libxml2 chromium
    - apt-get install google-chrome-stable -y --no-install-recommends
    - rm -rf /var/lib/apt/lists/*
    - yarn install
    - yarn add puppeteer
    - yarn add pa11y
    - which google-chrome-stable
    - yarn run test:accessibility
    # - apk update
    # - apk upgrade
    # - apk add --no-cache curl gnupg chromium nss nodejs npm yarn
    # - yarn install
    # - yarn add puppeteer
    # - yarn add pa11y
    # - if [ -x /usr/bin/google-chrome-stable ]; then export PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable; else export PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser; fi
    # - yarn run test:accessibility

acceptance_tests: &acceptance_tests
  pull: if-not-exists
  image: mcr.microsoft.com/playwright:v1.12.3-focal

steps:
  - name: clone_repos
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      branch:
        include:
        - master
        - feature/*
      event: [push, pull_request]

  - name: setup
    <<: *node_image
    environment:
      NOTIFY_STUB: true
    commands:
      - yarn install --frozen-lockfile
      - yarn run postinstall
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]

  - name: sonar_scanner
    <<: *sonar_scanner
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]

  - name: linting
    <<: *linting
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]
    depends_on:
      - setup

  - name: unit_tests
    <<: *unit_tests
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]
    depends_on:
      - setup

  - name: ui_integration_tests
    <<: *ui_integration_tests
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]
    depends_on:
      - setup

  - name: accessibility_tests
    <<: *accessibility_tests
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: [push, pull_request]
    depends_on:
      - setup

  - name: build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      branch:
        <<: *include_default_branch
      event: [push, pull_request]
    depends_on: 
      - linting
      - unit_tests

  - name: image_to_ecr
    image: plugins/ecr
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      region: eu-west-2
      repo: sas/refugee-integration-loans
      registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
      tags:
        - latest_${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA}
    when:
      <<: *include_default_and_feature_branches
      event: [push, pull_request]
    depends_on: 
      - build_image

  # Trivy Security Scannner for scanning OS related vulnerabilities in Base image of Dockerfile
  - name: scan_image_os
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: sas/refugee-integration-loans:${DRONE_COMMIT_SHA}
      SEVERITY: MEDIUM,HIGH,CRITICAL
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: true
      ALLOW_CVE_LIST_FILE: hof-services-config/Refugee_Integration_Loan/trivy-cve-exceptions.txt
    when:
      event:
      - pull_request
      - push
      - tag
    depends_on:
      - build_image
  
   # Trivy Security Scannner for scanning nodejs packages in Yarn
  - name: scan_node_packages
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: sas/refugee-integration-loans:${DRONE_COMMIT_SHA}
      SEVERITY: MEDIUM,HIGH,CRITICAL  --dependency-tree --format table
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: false
      ALLOW_CVE_LIST_FILE: hof-services-config/infrastructure/trivy/.trivyignore.yaml
    volumes:
      - name: dockersock
        path: /root/.dockersock    
    when:
      event: [push, pull_request]
    depends_on:
      - build_image

  # Deploy to pull request UAT environment
  - name: deploy_to_branch
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - bin/deploy.sh $${BRANCH_ENV}
    when:
      <<: *include_default_and_feature_branches
      event: pull_request
    depends_on:
      - image_to_ecr
  
  - name: acceptance_tests_branch
    <<: *acceptance_tests
    commands:
      - export DRONE_SOURCE_BRANCH=$(echo $DRONE_SOURCE_BRANCH | tr '[:upper:]' '[:lower:]' | tr '/' '-')
      - export ACCEPTANCE_HOST_NAME=https://$${APP_NAME}-$${DRONE_SOURCE_BRANCH}.internal.$${BRANCH_ENV}.homeoffice.gov.uk
      - yarn add playwright
      - yarn run test:acceptance
    when:
      branch:
        <<: *include_default_and_feature_branches
      event: pull_request
    depends_on:
      - deploy_to_branch

  # Deploy to Master UAT environment
  - name: deploy_to_uat
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - bin/deploy.sh $${UAT_ENV}
    when:
      branch:
        <<: *include_default_branch
      event: push
    depends_on:
      - image_to_ecr

  - name: acceptance_tests_uat
    <<: *acceptance_tests
    commands:
      - export ACCEPTANCE_HOST_NAME=https://$${APP_NAME}.uat.internal.sas-notprod.homeoffice.gov.uk
      - npx playwright install-deps
      - npx playwright install
      - yarn run test:acceptance
    when:
      branch:
        <<: *include_default_branch
      event: push
    depends_on:
      - deploy_to_uat

  # Get pull request branch so correct PR UAT environment is torn down in the tear_down_branch step that follows
  - name: get_pr_branch
    pull: if-not-exists
    image: drone/cli:alpine@sha256:14409f7f7247befb9dd2effdb2f61ac40d1f5fbfb1a80566cf6f2f8d21f3be11
    environment:
      DRONE_SERVER:
        from_secret: drone_server
      DRONE_TOKEN:
        from_secret: drone_token
    volumes:
      - name: dockersock
        path: /root/.dockersock
    commands:
      - drone build info $GIT_REPO $DRONE_BUILD_NUMBER --format {{.Message}} | grep -o " '.*' " | tr -d "[ ']" | tr '[:upper:]' '[:lower:]' | tr '/' '-' > /root/.dockersock/branch_name.txt
    when:
      branch:
        <<: *include_default_branch
      event: push

  # Tear down pull request UAT environment
  - name: tear_down_branch
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_notprod
    volumes:
      - name: dockersock
        path: /root/.dockersock
    commands:
      - bin/deploy.sh tear_down
    when:
      branch:
        <<: *include_default_branch
      event: push
    depends_on:
      - get_pr_branch
      - deploy_to_uat

  # Deploy to Staging environment
  - name: deploy_to_stg
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-prod.prod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_prod
    commands:
      - bin/deploy.sh $${STG_ENV}
    when:
      branch:
        <<: *include_default_branch
      event: push
    depends_on:
      - image_to_ecr
      - deploy_to_uat

  # Checks a build being promoted has passed, is on master which effectively means a healthy build on Staging
  - name: sanity_check_build_prod
    pull: if-not-exists
    image: drone/cli:alpine@sha256:14409f7f7247befb9dd2effdb2f61ac40d1f5fbfb1a80566cf6f2f8d21f3be11
    environment:
      DRONE_SERVER:
        from_secret: drone_server
      DRONE_TOKEN:
        from_secret: drone_token
    commands:
      - bin/sanity_check_build.sh
    when:
      target: PROD
      event: promote

  - name: clone_repos_prod
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      target: PROD
      event: promote

  # Deploy to Production environment
  - name: deploy_to_prod
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-prod.prod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_prod
    commands:
      - bin/deploy.sh $${PROD_ENV}
    when:
      target: PROD
      event: promote
    depends_on:
      - clone_repos_prod

  # CRON job step that tears down our pull request UAT environments
  - name: cron_tear_down
    pull: if-not-exists
    image: quay.io/ukhomeofficedigital/kd:v1.14.0
    environment:
      KUBE_SERVER: https://kube-api-notprod.notprod.acp.homeoffice.gov.uk
      KUBE_TOKEN:
        from_secret: kube_token_ril_acp_notprod
    commands:
      - bin/clean_up.sh $${BRANCH_ENV}
    when:
      cron: tear_down_pr_envs
      event: cron

  # CRON job steps that runs security scans using Snyk & Trivy
  - name: cron_clone_repos
    image: alpine/git
    environment:
      DRONE_GIT_USERNAME:
        from_secret: drone_git_username
      DRONE_GIT_TOKEN:
        from_secret: drone_git_token
    commands:
      - git clone https://$${DRONE_GIT_USERNAME}:$${DRONE_GIT_TOKEN}@github.com/UKHomeOfficeForms/hof-services-config.git
    when:
      cron: security_scans
      event: cron

  - name: cron_build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      cron: security_scans
      event: cron

  - name: cron_trivy_scan_image_os
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    pull: always
    environment:
        IMAGE_NAME: node:20.16.0-alpine3.20@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52
        SEVERITY: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL --dependency-tree
        FAIL_ON_DETECTION: true
        IGNORE_UNFIXED: false
    when:
      cron: security_scans
      event: cron
    depends_on:
      - cron_build_image

  - name: cron_trivy_scan
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    pull: always
    environment:
      IMAGE_NAME: sas/refugee-integration-loans:${DRONE_COMMIT_SHA}
      SEVERITY: MEDIUM,HIGH,CRITICAL
      FAIL_ON_DETECTION: false
      IGNORE_UNFIXED: true
      ALLOW_CVE_LIST_FILE: hof-services-config/Refugee_Integration_Loan/trivy-cve-exceptions.txt
    when:
      cron: security_scans
      event: cron
    depends_on:
      - cron_build_image

  # Slack notification upon a CRON job fail
  - name: cron_notify_slack_tear_down_pr_envs
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "CRON Job {{build.deployTo}} of RIL has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\n\nJob: <{{build.link}}|#{{build.number}}>\n\nCommit: {{build.commit}}\n"
      username: Drone
      webhook:
        from_secret: slack_webhook
    when:
      cron: tear_down_pr_envs
      event: cron
      status: failure
    depends_on:
      - cron_tear_down

  - name: cron_notify_slack_security_scans
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "CRON Job {{build.deployTo}} of RIL has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\n\nJob: <{{build.link}}|#{{build.number}}>\n\nCommit: {{build.commit}}\n"
      username: Drone
      webhook:
        from_secret: slack_webhook
    when:
      cron: security_scans
      event: cron
      status: failure
    depends_on:
      - cron_trivy_scan_image_os
      - cron_trivy_scan

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

  # Redis session setup in background so ui integration tests can run
  - name: session
    image: redis
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}
