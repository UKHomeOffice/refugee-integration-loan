---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{ if eq .KUBE_NAMESPACE .PROD_ENV }}
  name: {{ .APP_NAME }}
  {{ else if eq .KUBE_NAMESPACE .BRANCH_ENV }}
  # annotations:
  #   downscaler/uptime: {{ .NON_PROD_AVAILABILITY }}
  name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
  {{ else }}
  annotations:
    downscaler/uptime: {{ .NON_PROD_AVAILABILITY }}
  name: {{ .APP_NAME }}
  {{ end }}
spec:
  {{ if or (eq .KUBE_NAMESPACE .STG_ENV) (eq .KUBE_NAMESPACE .PROD_ENV) }}
  replicas: 2
  {{ else }}
  replicas: 1
  {{ end }}
  selector:
    matchLabels:
      {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
      name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
      {{ else }}
      name: {{ .APP_NAME }}
      {{ end }}
  template:
    metadata:
      labels:
        {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
        name: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        app: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        service: {{ .APP_NAME }}-{{ .DRONE_SOURCE_BRANCH }}
        {{ else }}
        name: {{ .APP_NAME }}
        app: {{ .APP_NAME }}
        service: {{ .APP_NAME }}
        {{ end }}
    spec:
      containers:
        - name: {{ .APP_NAME }}
          image: {{ .IMAGE_URL }}/{{ .IMAGE_REPO }}:{{.DRONE_COMMIT_SHA}}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
                name: {{ .APP_NAME }}-configmap-{{ .DRONE_SOURCE_BRANCH }}
                {{ else }}
                name: {{ .APP_NAME }}-configmap
                {{ end }}
          env:
            - name: TZ
              value: Europe/London
            # FIXME: This is a temporary fix because some internal services have self signed certs. This will need to be removed and certs will need to be reenabled in the future
            # - name: NODE_TLS_REJECT_UNAUTHORIZED
            #   value: "0"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_HOST
              {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
              value: redis-{{ .DRONE_SOURCE_BRANCH }}
              {{ else }}
              value: redis
              {{ end }}
            - name: NOTIFY_KEY
              valueFrom:
                secretKeyRef:
                  name: ril-notify-key
                  key: ril-notify-key
            {{ if not (eq .KUBE_NAMESPACE .BRANCH_ENV) }}
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: session_secret
            {{ end }}
            - name: PDF_CONVERTER_URL
              {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
              value: https://html-pdf-converter-{{ .DRONE_SOURCE_BRANCH }}:10443/convert
              {{ else }}
              value: https://html-pdf-converter:10443/convert
              {{ end }}
          {{ if not (eq .KUBE_NAMESPACE .BRANCH_ENV) }}
          livenessProbe:
            httpGet:
              path: /healthz/ping
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          {{ end }}
          resources:
            requests:
              cpu: "20m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "200Mi"
          volumeMounts:
            - mountPath: /public
              name: public
            - mountPath: /certs
              name: certs
              readOnly: true
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
              
        - name: nginx-proxy
          # nginx-proxy-govuk:v4
          image: quay.io/ukhomeofficedigital/nginx-proxy-govuk@sha256:4470064d0b1d20ae08c5fd85551576cb687f342a22d6cb456fda9b2c4ce8c8df
          resources:
            requests:
              memory: 10Mi
              cpu: 10m
            limits:
              cpu: 250m
              memory: 256Mi
          env:
            - name: PROXY_SERVICE_HOST
              value: 127.0.0.1
            - name: PROXY_SERVICE_PORT
              value: "8080"
            - name: ENABLE_UUID_PARAM
              value: "FALSE"
            - name: PORT_IN_HOST_HEADER
              value: "FALSE"
            - name: VERBOSE_ERROR_PAGES
              value: "TRUE"
            - name: EXTRA_NAXSI_RULES
              value: |-
                BasicRule wl:2,1000,1001,1002,1007,1008,1009,1010,1011,1013,1015,1101,1205,1314 "mz:BODY";
                BasicRule wl:0 "mz:$HEADERS_VAR:Cookie";
                BasicRule wl:1500 "mz:FILE_EXT";
            - name: ADD_NGINX_SERVER_CFG
              value: |-
                ssl_stapling on;
                ssl_stapling_verify on;
                ssl_stapling_responder http://x1.i.lencr.org;
                resolver 8.8.8.8 8.8.4.4;
                ssl_certificate /certs/tls.crt;
                ssl_certificate_key /certs/tls.key;
                ssl_trusted_certificate /certs/tls.crt;
                add_header Cache-Control private;
                add_header X-Content-Type-Options "nosniff" always;
                add_header X-XSS-Protection "1; mode=block" always;
                location /public {
                  add_header Cache-Control max-age=86400;
                  add_header X-Content-Type-Options "nosniff" always;
                  add_header X-XSS-Protection "1; mode=block" always;
                  alias /public;
                }
# {{ file .NGINX_SETTINGS | indent 12 }}
          ports:
            - containerPort: 10443
          volumeMounts:
            - mountPath: /public
              name: public
            - mountPath: /certs
              name: certs
              readOnly: true
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
          securityContext:
            runAsNonRoot: true
      volumes:
        - name: public
          emptyDir: {}
        - name: certs
          secret:
            {{ if eq .KUBE_NAMESPACE .BRANCH_ENV }}
            secretName: tls
            {{ else }}
            secretName: tls-cert
            {{ end }}
        - name: bundle
          configMap:
            name: bundle
